{"version":3,"sources":["components/Menu/Menu.jsx","store/data.js","utils/data.js","components/ClinicalCard/ClinicalCard.jsx","utils/requests.js","store/clinicalCases.js","components/ClinicalCases/ClinicalCases.jsx","store/search.js","components/ClickableCard/ClickableCard.jsx","components/SimilarCases/SimilarCases.jsx","components/Search/SearchById.jsx","components/Search/SearchByText.jsx","components/Search/Search.jsx","components/Stats/Stats.jsx","theme.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","backgroundColor","palette","background","paper","display","justifyContent","height","paddingTop","ul","textDecoration","width","link","color","text","primary","textAlign","item","light","Menu","classes","items","icon","href","Paper","className","List","map","to","style","ListItem","ListItemIcon","ListItemText","sectionsOrder","transform","key","result","replace","charAt","toUpperCase","slice","minWidth","title","textTransform","secondary","marginBottom","fontSize","subtitle","fontWeight","paragraph","divider","section","cardOpen","cardClose","maxHeight","actionArea","ClinicalCard","props","React","useState","opened","setOpened","Card","variant","square","CardContent","Grid","container","justify","Typography","component","case_id","percentage","Chip","avatar","Avatar","label","Divider","sections","CardActionArea","fullWidth","onClick","get","endpoint","params","a","axios","post","data","JSON","stringify","headers","getAllCases","res","status","response","results","getClinicalCaseById","id","parseInt","error","message","borderRadius","grey","containerBody","padding","itemHeader","main","itemSearch","itemCards","itemButton","button","containerSearch","paddingLeft","containerCard","input","ClinicalCases","setData","setInput","page","setPage","handleChange","event","target","value","handleClick","direction","InputBase","placeholder","onChange","inputProps","IconButton","iconButton","aria-label","max","length","i","element","push","renderCards","getSimilarityById","section_names","getSimilarityByText","aggregated_search","card","marginTop","cardAction","cardClicked","ClickableCard","selected","setSelected","index","ButtonBase","currentTarget","newSelected","onSelect","lineHeight","pos","SimilarCases","clinicCase","filter","el","renderSections","Alert","elevation","paddingRight","resultHeader","paddingBottom","SearchById","clinicalCase","setError","useEffect","window","scrollTo","Object","keys","showClinicalCase","severity","values","all","join","renderResults","paragraphTitle","SearchByText","initValues","setValues","setResult","aggregated","setAggregated","showResults","inputSections","newValues","multiline","rows","renderFormSections","FormControlLabel","control","Switch","checked","name","paperSearch","indicator","dark","Search","step","setStep","Tabs","newValue","tab","Tab","Stats","createMuiTheme","App","ThemeProvider","sm","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7a87948a.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SearchIcon from '@material-ui/icons/Search';\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\n\nimport { Link } from \"react-router-dom\";\nimport { Paper } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n    display: 'flex',\n    justifyContent: 'center',\n    height: '100%',\n    paddingTop: '2em',\n  },\n  ul: {\n    textDecoration: 'none',\n    width: '100% !important',\n    justifyContent: 'center'\n  },\n  link: {\n    textDecoration: 'none',\n    color: theme.palette.text.primary,\n    textAlign: 'center',\n    \"&:visited\": {\n      textDecoration: 'none'\n    },\n    \"&:hover\": {\n      textDecoration: 'none'\n    },\n    \"&:focus\": {\n      textDecoration: 'none'\n    },\n    \"&:active\": {\n      textDecoration: 'none'\n    }\n  },\n  item: {\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.light\n    }\n  }\n}));\n\nfunction Menu() {\n  const classes = useStyles();\n\n  const items = [\n    {\n      text: 'Clinic cases',\n      icon: <DescriptionOutlinedIcon />,\n      href: '/clinical-cases'\n    },\n    {\n      text: 'Search similarities',\n      icon: <SearchIcon />,\n      href: 'search'\n    }\n  ]\n\n  return (\n    <Paper className={classes.root}>\n      <List className={classes.ul}>\n        {\n          items.map((item) => {\n            return (\n              <Link to={item.href} style={{ textDecoration: 'none' }} className={classes.link} >\n                <ListItem className={classes.item} key={item.text}>\n                    <ListItemIcon>{item.icon}</ListItemIcon>\n                    <ListItemText primary={item.text} />\n                </ListItem>\n              </Link>\n            )\n          })\n        }\n      </List>\n    </Paper>\n  );\n}\n\nexport default Menu;","export const sectionsOrder = [\n  'medical_history',\n  'physic_exploration',\n  'supplementary_tests',\n  'assessment',\n  'treatment',\n  'evolution'\n]","\nexport const transform = (key) => {\n  let result = key.replace('_', ' ');\n  return result.charAt(0).toUpperCase() + result.slice(1);\n}","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Divider, Grid, Chip, CardActionArea, Button, Avatar } from \"@material-ui/core\";\nimport { sectionsOrder } from '../../store/data';\nimport { transform } from '../../utils/data';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\n\nconst useStyles = makeStyles((theme) =>  (\n  {\n    root: {\n      minWidth: 275\n    },\n    title: {\n      textAlign: 'left',\n      textTransform: 'uppercase',\n      color: theme.palette.text.secondary,\n      marginBottom: '0.5em',\n      fontSize: '18px'\n    },\n    subtitle: {\n      textTransform: 'uppercase',\n      fontWeight: 600\n    },\n    paragraph: {\n      textAlign: 'justify',\n    },\n    divider: {\n      marginBottom: '1em'\n    },\n    section: {\n      marginBottom: '1em'\n    },\n    cardOpen: {\n      height: 'auto'\n    }, \n    cardClose: {\n      maxHeight: '20em'\n    },\n    actionArea: {\n      backgroundColor: 'white',\n      textAlign: 'center'\n    }\n  }));\n\n\nfunction ClinicalCard(props) {\n  const classes = useStyles();\n  const [opened, setOpened] = React.useState(false)\n  return (<Card variant='outlined' className={classes.root} square>\n    <CardContent className={opened ? classes.cardOpen : classes.cardClose}>\n    <Grid container justify='space-between'>\n      <Grid item>\n        <Typography variant=\"h6\" component=\"h2\" className={classes.title}>Case id: {props.case_id}</Typography>\n      </Grid>\n      {\n        props.percentage &&\n        <Grid item>\n          <Chip avatar={<Avatar>%</Avatar>} label={props.percentage}  variant=\"outlined\" />\n        </Grid>\n      }\n    </Grid>\n    <Divider className={classes.divider}/>\n      {\n        sectionsOrder.map(key => {\n          if (key in props.sections) {\n            return (\n              <div className={classes.section}>\n                <Typography variant=\"subtitle1\" className={classes.subtitle}>{transform(key)}</Typography>\n                <Typography variant=\"body1\" className={classes.paragraph}>{props.sections[key]}</Typography>\n              </div>\n            )\n          } else return []\n        })\n      }\n    </CardContent>\n    <CardActionArea className={classes.actionArea}>\n      <Button fullWidth onClick={() => {setOpened(!opened)}}>\n        {\n          opened\n          ? <ExpandLessIcon /> \n          : <ExpandMoreIcon />\n        }\n      </Button>\n    </CardActionArea>\n  </Card>);\n}\n\nexport default ClinicalCard;\n","import axios from 'axios';\n\n\nexport const get = async (endpoint, params) => {\n    return await axios.get(`https://casescan.herokuapp.com${endpoint}`, { params });\n}\n\nexport const post = async (endpoint, { params, data}) => {\n    return await axios.post(`https://casescan.herokuapp.com${endpoint}`, \n      JSON.stringify(data),\n      { \n        params, \n        headers : {\n          'Content-Type': 'application/json'\n        }\n      })\n}","import { get } from '../utils/requests';\n\nexport const getAllCases = async function() {\n  const res = await get('/clinical_cases')\n  if(res.status === 200) {\n      return res.data.response.results\n  } else {\n      return []\n  }\n}\n\n\nexport const getClinicalCaseById = async function(id) {\n  try {\n    const res = await get('/clinical_cases', { case_id: parseInt(id) })\n    if(res.status === 200) {\n      if(res.data.error){\n        return res.data\n      }\n      return res.data.response.results\n    }\n  } catch (error) {\n    return {\n      error: true,\n      message: 'Invalid input. The ID is between 1 and 2500'\n    }\n  }\n}\n","import Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Button from \"@material-ui/core/Button/Button\";\nimport ClinicalCard from \"../ClinicalCard/ClinicalCard\";\n\nimport { getClinicalCaseById, getAllCases } from \"../../store/clinicalCases\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& .MuiOutlinedInput-root\": {\n      \"& fieldset\": {\n        borderRadius: `4px 0 0 4px`,\n      },\n    },\n  },\n  container: {\n    flexGrow: 1,\n    display: \"flex\",\n    height: \"100%\",\n    width: \"inherit\",\n    backgroundColor: theme.palette.grey[100],\n  },\n  containerBody: {\n    padding: '5em',\n    paddingTop: '1em'\n  },\n  itemHeader: {\n    backgroundColor: theme.palette.primary.main,\n    padding: '2em',\n    paddingTop: '2em'\n  },\n  itemSearch: {\n    paddingTop: \"2em\",\n  },\n  itemCards: {\n    paddingTop: \"2em\",\n  },\n  itemButton: {\n    display: \"flex\",\n    justifyContent: \"left\",\n  },\n  button: {\n    borderRadius: '0'\n  },  \n  containerSearch: {\n    display: \"flex\",\n    paddingLeft: \"1em\",\n  },\n  containerCard: {\n    marginBottom: '2em'\n  },\n  input: {\n    width: \"100%\",\n  }\n}));\n\nfunction ClinicalCases() {\n  const classes = useStyles();\n\n  const [data, setData] = React.useState([]);\n  const [input, setInput] = React.useState(\"\");\n  const [page, setPage] = React.useState(1);\n\n  /** HANDLERS */\n  const handleChange = (event) => {\n    setInput(event.target.value);\n  };\n\n  const handleClick = async () => {\n    let result;\n    if (input) {\n      result = await getClinicalCaseById(input)\n    } else {\n      result = await getAllCases()\n    }\n    await setData(result)\n  };\n\n  const handleMore = () => {\n    setPage(page + 1);\n  };\n\n  /**COMPUTED */\n  const isNextPage = function () {\n    if (page * 3 >= data.length) return false;\n    return true;\n  };\n\n  /** RENDERS */\n  const renderSearch = function () {\n    return (\n      <Paper component=\"form\" className={classes.containerSearch}>\n        <InputBase\n          className={classes.input}\n          placeholder=\"Search clinical case by id\"\n          value={input}\n          onChange={handleChange}\n          inputProps={{ \"aria-label\": \"search clinical case\" }}\n        />\n        <IconButton\n          className={classes.iconButton}\n          onClick={handleClick}\n          aria-label=\"search\"\n        >\n          <SearchIcon />\n        </IconButton>\n      </Paper>\n    );\n  };\n\n  const renderCards = function () {\n    const max = page * 3 < data.length ? page * 3 : data.length;\n    let i = 0;\n    let result = [];\n    while (i < max) {\n      const element = data[i];\n      result.push(<div className={classes.containerCard}>\n        <ClinicalCard case_id={element.case_id} sections={element.sections} />\n      </div>);\n      i += 1;\n    }\n    return result;\n  };\n\n  return (\n    <Grid container direction=\"column\" className={classes.container}>\n      <Grid item className={classes.itemHeader}>\n        <Typography variant=\"h4\">Clinical Cases</Typography>\n      </Grid>\n      <Grid item>\n        <Grid container direction=\"column\" className={classes.containerBody}>\n          <Grid item className={classes.itemSearch}>\n            {renderSearch()}\n          </Grid>\n          <Grid item className={classes.itemCards}>\n            {renderCards()}\n          </Grid>\n          {data && isNextPage() && (\n            <Grid item className={classes.itemButton}>\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                onClick={handleMore}\n                className={classes.button}\n              >\n                Show more documents\n              </Button>\n            </Grid>\n          )}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default ClinicalCases;\n","import { post } from \"../utils/requests\";\n\nexport const getSimilarityById = async function ({ case_id, sections}) {\n  const res = await post(\"/search/clinical_case\", {\n    data: { section_names: sections },\n    params: { case_id }\n  });\n  if (res.status === 200) {\n    return res.data.response.results;\n  } else {\n    return [];\n  }\n};\n\n\nexport const getSimilarityByText = async function ({ section_names, aggregated_search = true }) {\n  const res = await post(\"/search/text\", {\n    data: { section_names, aggregated_search }\n  });\n  if (res.status === 200) {\n    return res.data.response.results;\n  } else {\n    return [];\n  }\n}","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport { Grid, makeStyles } from '@material-ui/core';\nimport { sectionsOrder } from '../../store/data';\nimport { transform } from '../../utils/data';\n\nconst useStyles = makeStyles((theme) => (\n  {\n    card: {\n      width: 'inherit',\n      marginTop: '0.5em',\n      marginBottom: '0.5em'\n    },\n    cardAction: {\n      display: 'block',\n      textAlign: 'justify'\n    },\n    cardClicked: {\n      width: 'inherit',\n      marginTop: '0.5em',\n      marginBottom: '0.5em',\n      backgroundColor: theme.palette.secondary.light\n    }\n  }\n))\nfunction ClickableCard (props) {\n  const classes = useStyles();\n  const [selected, setSelected] = React.useState([false, false, false, false, false, false])\n\n  const handleClick = (event) => {\n    const id = event.currentTarget.id;\n    for(let i in sectionsOrder) {\n      if (sectionsOrder[i] === id) {\n        let newSelected = [...selected];\n        newSelected[i] = !selected[i];\n        setSelected([...newSelected]);\n        props.onSelect(newSelected); \n        break;\n      }\n    }\n  }\n\n  const renderItems = () => {\n    return sectionsOrder.map((key, index) => {\n      return (\n        <Card square fullWidth className={selected[index] ? classes.cardClicked : classes.card} >\n          <ButtonBase\n            className={classes.cardAction}\n            onClick={(event) => handleClick(event)}\n            id={key}\n          >\n            <CardContent>\n              <Typography variant=\"h6\">{transform(key)}</Typography>\n              <Typography variant=\"body1\">{props.sections[key]}</Typography>\n            </CardContent>\n          </ButtonBase>\n        </Card>\n      );\n    });\n  }\n\n  return (\n    <Grid container direction=\"row\">\n      {renderItems()}\n    </Grid>\n  );\n}\n\nexport default ClickableCard;","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Divider, Grid } from \"@material-ui/core\";\nimport ClinicalCard from \"../ClinicalCard/ClinicalCard\";\nimport { transform } from '../../utils/data';\nimport { sectionsOrder } from '../../store/data';\n\nconst useStyles = makeStyles((theme) =>  (\n  {\n    container: {\n      marginBottom: '2em'\n    },\n    title: {\n      textAlign: 'left',\n      textTransform: 'uppercase',\n      color: theme.palette.text.secondary,\n      lineHeight: '2em'\n    },\n    subtitle: {\n      textTransform: 'uppercase',\n      fontWeight: 500\n    },\n    paragraph: {\n      textAlign:'justify',\n    },\n    divider: {\n      marginBottom: '1em'\n    },\n    pos: {\n      marginBottom: 12,\n    },\n  }));\n\nfunction SimilarCases(props) {\n  const classes = useStyles();\n\n  function renderSections() {\n    let result = sectionsOrder.map((key) => {\n      if(!(key in props.sections)) return undefined;\n      return <Grid container direction=\"column\" >\n        <Typography variant=\"subtitle1\" component=\"h2\" className={classes.title}>Section: {transform(key)}</Typography>\n        <Divider className={classes.divider}/>\n        {\n          props.sections[key].map((clinicCase) => {\n            return (\n              <div className={classes.container}>\n                <ClinicalCard \n                  case_id={clinicCase.case_id}\n                  sections={clinicCase.sections}\n                  percentage={clinicCase.percentage} />\n              </div>\n            )\n          })\n        }\n      </Grid>\n    })\n    result = result.filter(function (el) {\n      return el != null;\n    });\n    return result;\n  }\n  return <Grid item>{renderSections()}</Grid>;\n}\n\nexport default SimilarCases;\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Button from \"@material-ui/core/Button/Button\";\nimport Typography from '@material-ui/core/Typography';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { getClinicalCaseById } from '../../store/clinicalCases';\nimport { getSimilarityById } from '../../store/search';\nimport ClickableCard from \"../ClickableCard/ClickableCard\";\nimport { sectionsOrder } from '../../store/data';\nimport SimilarCases from '../SimilarCases/SimilarCases';\nimport { transform } from '../../utils/data';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) =>  ({\n  root: {\n    \"& .MuiOutlinedInput-root\": {\n      \"& fieldset\": {\n        borderRadius: `4px 0 0 4px`,\n      },\n    },\n  },\n  input: {\n    width: \"100%\",\n  },\n  containerSearch: {\n    display: \"flex\",\n    paddingLeft: \"1em\",\n    marginBottom: '1em',\n    marginTop:'0.5em'\n  },\n  container: {\n    padding: '2em',\n    paddingLeft: '5em',\n    paddingRight: '5em'\n  },\n  itemButton: {\n    marginTop: '1em',\n    width: '100%',\n    display:'flex',\n    justifyContent: 'left'\n  },\n  resultHeader: {\n    marginBottom: '2em'\n  },\n  button: {\n    borderRadius: '0',\n    paddingTop: '0.7em',\n    paddingBottom: '0.7em'\n  },\n  subtitle: {\n    marginBottom: '1em'\n  }\n}));\n\nfunction SearchById() {\n  const classes = useStyles();\n  const [input, setInput] = React.useState('');\n  const [data, setData] = React.useState({\n    clinicalCase: {\n      case_id: '',\n      sections: {}\n    },\n    results: {}\n  });\n  const [selected, setSelected] = React.useState([]);\n  const [error, setError] = React.useState({\n    error: false,\n    message: ''\n  })\n  React.useEffect(() => {\n    window.scrollTo(0, 0)\n  }, [data]);\n  /** HANDLERS */\n  const handleChange = (event) => {\n    setInput(event.target.value);\n  };\n\n  const handleClick = async () => {\n    if (!Object.keys(data.clinicalCase.sections).length && input) {\n      const clinicalCase = await getClinicalCaseById(input);\n      if ('error' in clinicalCase) {\n        setError({ error: true, message: clinicalCase.message });\n      }\n      else {\n        setData({\n          clinicalCase: clinicalCase[0],\n          results: {},\n        });\n      }\n    } else if (Object.keys(data.clinicalCase.sections).length) {\n      let sections = sectionsOrder.map((element, index) => {\n        if (selected[index]) {\n          return element\n        }\n        return undefined;\n      })\n      sections = sections.filter(function (el) {\n        return el != null;\n      });\n      const results = await getSimilarityById({ case_id: data.clinicalCase.case_id, sections: sections });\n      setData({\n        results,\n        clinicalCase: { ...data.clinicalCase, sections: [] }\n      })\n    }\n  }\n\n  const handleSelect = (values) => {\n    setSelected(values)\n  }\n\n  /** COMPUTED */\n  const showClinicalCase = () => {\n    if (Object.keys(data.clinicalCase.sections).length) return true\n    else return false\n  }\n\n  const showResults = () => {\n    if (Object.keys(data.results).length) return true\n    else return false\n  }\n\n  const showSearch = () => {\n    if (!data.clinicalCase.case_id) return true\n    return false\n  }\n\n  const renderSearch = function () {\n    return (\n      <Paper component=\"form\" className={classes.containerSearch}>\n        <InputBase\n          className={classes.input}\n          placeholder=\"Search clinical case by id\"\n          value={input}\n          onChange={handleChange}\n          fullWidth\n          inputProps={{ \"aria-label\": \"search clinical case\" }}\n        />\n        <IconButton\n          className={classes.iconButton}\n          onClick={handleClick}\n          aria-label=\"search\"\n        >\n          <SearchIcon />\n        </IconButton>\n      </Paper>\n    );\n  };\n\n  const renderResults = function () {\n\n    let all = Object.keys(data.results);\n    all = all.map((element) => transform(element));\n    all = all.join(\", \");\n    return (\n      <Grid container direction=\"column\">\n        <Grid item className={classes.resultHeader}>\n          <Typography variant=\"subtitle1\">Clinics cases similarities with clinical case <b>{data.clinicalCase.case_id}</b>. </Typography>\n          <Typography variant=\"subtitle2\">Topic(s): {all}</Typography>\n        </Grid>\n        <SimilarCases sections={data.results} />\n      </Grid>\n    )\n  }\n  return (\n    <Grid container direction=\"column\" className={classes.container}>\n      {\n        showSearch() &&\n        <Grid item>\n          {renderSearch()}\n          {\n            error.error &&\n            <Alert severity=\"error\">\n              {error.message}\n            </Alert>\n          }\n        </Grid>\n      }\n      {\n        showClinicalCase() &&\n        <Grid item>\n          <Typography variant=\"subtitle1\" className={classes.subtitle}>\n            Select the paragraphs that you want to search by:\n          </Typography>\n          <ClickableCard sections={data.clinicalCase.sections} onSelect={handleSelect} />\n        </Grid>\n      }\n      {\n        showClinicalCase() &&\n        <Grid item className={classes.itemButton}>\n          <Button \n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleClick}\n            className={classes.button}\n          >\n            <Typography variant=\"body\">Search similarity</Typography>\n          </Button>\n        </Grid>\n      }\n      {\n        showResults() && renderResults()\n      }\n    </Grid>\n  )\n}\n\nexport default SearchById;","import React from \"react\";\nimport { Button, Grid, InputBase, Paper, Typography } from \"@material-ui/core\";\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { sectionsOrder } from '../../store/data';\nimport { getSimilarityByText } from '../../store/search';\nimport { transform } from '../../utils/data';\n\nimport SimilarCases from \"../SimilarCases/SimilarCases\";\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    paddingRight: '3em',\n    paddingLeft: '3em',\n    paddingTop: '2em'\n  },\n  paragraph:{ \n    marginBottom: '1em'\n  },\n  paragraphTitle: {\n    fontWeight: 500,\n    marginBottom: '0.5em'\n  },\n  input: {\n    width: '100%',\n    padding: '1em'\n  },\n  button: {\n    borderRadius: '0',\n    paddingTop: '0.7em',\n    paddingBottom: '0.7em'\n  }\n}));\n\nfunction SearchByText() {\n  const classes = useStyles();\n  const initValues = sectionsOrder.map(() => {\n    return ''\n  })\n  const [values, setValues] = React.useState(initValues);\n  const [result, setResult] = React.useState([]);\n  const [aggregated, setAggregated] = React.useState(false);\n  React.useEffect(() => {\n    window.scrollTo(0, 0)\n  }, [result]);\n  \n  const handleChange = (event) => {\n    const id = event.currentTarget.id;\n    let newValues = [...values];\n    newValues[id] = event.currentTarget.value;\n    setValues([...newValues]);\n  }\n\n  const handleClick = async () => {\n    let section_names = sectionsOrder.map((el , index) => {\n      if (values[index].length) {\n        return values[index]\n      } \n      return undefined\n    })\n    section_names = section_names.filter(function (el) {\n      return el != null;\n    });\n    const res = await getSimilarityByText({ section_names, aggregated_search: aggregated })\n    await setResult(res)\n  }\n\n  const showResults = () => {\n    if (Object.keys(result).length) return true;\n    else return false;\n  }\n\n  function renderFormSections() {\n    let inputSections = sectionsOrder.map((key, index) => {\n      return (\n        <Grid item className={classes.paragraph}>\n          <Typography className={classes.paragraphTitle}>{transform(sectionsOrder[index])}</Typography>\n          <Paper square>\n            <InputBase\n              className={classes.input}\n              value = {values[index]}\n              onChange={(event) => handleChange(event)}\n              id = {index}\n              multiline={true}\n              placeholder=\"Write your case details here ...\"\n              rows={4}\n            />\n          </Paper>\n        </Grid>\n      )\n    })\n    return (\n      <Grid container direction=\"column\">\n        {inputSections}\n      </Grid>\n    )\n  }\n  return (\n    <Grid container direction=\"column\" className={classes.container}>\n      {      \n        !showResults() &&\n        <Grid item>\n          {renderFormSections()}\n          <FormControlLabel\n            control={<Switch checked={aggregated} onChange={() => setAggregated(!aggregated)} name=\"checkedA\" />}\n            label=\"Search by aggregated\"\n          />\n        </Grid>\n      }\n      {\n        !showResults() &&\n        <Grid item>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.button}\n            onClick={handleClick}\n          >\n            SEARCH SIMILAR CLINICAL CASE\n          </Button>\n      </Grid>\n      }\n      {\n        showResults &&\n        <Grid item>\n          <SimilarCases sections={result}/>\n        </Grid>\n      }\n    </Grid>\n  );\n}\n\nexport default SearchByText;\n","import React from \"react\";\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from '@material-ui/core/Typography';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Paper from '@material-ui/core/Paper';\nimport SearchById from './SearchById';\nimport SearchByText from \"./SearchByText\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& .MuiOutlinedInput-root\": {\n      \"& fieldset\": {\n        borderRadius: `4px 0 0 4px`,\n      },\n    },\n  },\n  container: {\n    flexGrow: 1,\n    display: \"flex\",\n    height: \"100%\",\n    width: \"inherit\",\n    backgroundColor: theme.palette.grey[100],\n  },\n  itemSearch: {\n    backgroundColor: theme.palette.primary.main\n  },\n  paperSearch: {\n    padding: '2em',\n    paddingTop: '1em',\n    paddingBottom: '0.5em',\n    backgroundColor: theme.palette.primary.main \n  },\n  itemHeader: {\n    backgroundColor: theme.palette.primary.main,\n    padding: '2em',\n    paddingBottom: '0.5em'\n  },\n  indicator: {\n    backgroundColor: theme.palette.primary.dark\n  }\n}));\n\n\nfunction Search() {\n\n  const classes = useStyles();\n  const [step, setStep] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setStep(newValue);\n  };\n\n\n  const renderTabs = () => {\n    if (!step) return <SearchById />\n    else return <SearchByText />\n  } \n  return (\n    <Grid container direction=\"column\" className={classes.container}>\n      <Grid item className={classes.itemHeader}>\n        <Typography variant=\"h4\">Search similarities</Typography>\n      </Grid>\n      <Grid item className={classes.itemSearch}>\n        <Paper className={classes.paperSearch} elevation={0} square>\n          <Tabs\n            value={step}\n            onChange={handleChange}\n            className={classes.tab}\n            classes={{\n              indicator: classes.indicator\n            }}\n          >\n            <Tab label=\"By existing clinical case\" />\n            <Tab label=\"By text\" />\n          </Tabs>\n        </Paper>\n      </Grid>\n      <Grid item>\n        {renderTabs()}\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default Search;\n","import React from \"react\";\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& .MuiOutlinedInput-root\": {\n      \"& fieldset\": {\n        borderRadius: `4px 0 0 4px`,\n      },\n    },\n  },\n  container: {\n    flexGrow: 1,\n    display: \"flex\",\n    height: \"100%\",\n    width: \"inherit\",\n    backgroundColor: theme.palette.grey[100],\n  },\n  containerBody: {\n    padding: '2em',\n    paddingTop: '1em'\n  },\n  itemHeader: {\n    backgroundColor: theme.palette.primary.main,\n    padding: '2em',\n    paddingTop: '2em'\n  }\n}));\n\n\nfunction Stats() {\n\n  const classes = useStyles();\n  return (\n    <Grid container direction=\"column\" className={classes.container}>\n      <Grid item className={classes.itemHeader}>\n        <Typography variant=\"h4\">Stats</Typography>\n      </Grid>\n      <Grid item>\n        <Grid container direction=\"column\" className={classes.containerBody}>\n          <Grid item className={classes.itemSearch}>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default Stats;\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#d4e157'\n    },\n    secondary: {\n      main: '#ffb74d',\n    },\n  },\n});\n\nexport default theme;","import React from \"react\";\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nimport Menu from './components/Menu/Menu';\nimport ClinicalCases from './components/ClinicalCases/ClinicalCases';\nimport Search from './components/Search/Search';\nimport Stats from './components/Stats/Stats';\nimport theme from './theme';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    height: 'inherit'\n  },\n}));\n\n\nfunction App() {\n\n  const classes = useStyles();\n  return (\n    <ThemeProvider theme={theme}>\n      <Router>\n        <Grid container direction=\"row\" className={classes.container}>\n          <Grid item sm={2}>\n            <Menu/>\n          </Grid>\n          <Grid item sm={10}>\n            <Switch>\n              <Route path=\"/clinical-cases\">\n                <ClinicalCases />\n              </Route>\n              <Route path=\"/search\">\n                <Search />\n              </Route>\n              <Route path=\"/stats\">\n                <Stats />\n              </Route>\n            </Switch>\n          </Grid>\n        </Grid>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}